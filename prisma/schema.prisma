// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid()) @db.VarChar(50)
  email    String  @unique @db.VarChar(100)
  username String  @unique @db.VarChar(100)
  password String  @db.VarChar(100)
  role     Role    @default(USER)
  verified Boolean @default(false)
  token    Token[]

  @@map("users")
}

model Token {
  id      String   @id @default(uuid()) @db.VarChar(50)
  token   String   @unique @db.VarChar(100)
  expire  DateTime
  user    User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String   @db.VarChar(50)

  @@map("token")
}

model Book {
  id             String       @id @default(uuid()) @db.VarChar(50)
  title          String       @db.VarChar(100)
  description    String       @db.Text
  author         String       @db.VarChar(100)
  target         String       @db.VarChar(100)
  size           String       @db.VarChar(50)
  ISBN           String       @db.VarChar(50)
  page           Int
  cover_book_id  String
  cover_book     String
  link_shopee    String?
  link_tokopedia String?
  price          Int
  category       CategoryBook @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id    String       @db.VarChar(50)

  @@map("books")
}

model Company {
  id          String @id @default(uuid()) @db.VarChar(50)
  name        String @unique @db.VarChar(100)
  industry    String @db.VarChar(100)
  description String @db.Text
  visi        String @db.Text
  misi        Misi[]

  @@map("company")
}

model Misi {
  id         String  @id @default(uuid()) @db.VarChar(50)
  misi       String  @db.Text
  company    Company @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id String  @db.VarChar(50)

  @@map("misi")
}

model CategoryBook {
  id       String @id @default(uuid()) @db.VarChar(50)
  category String @db.VarChar(50)
  book     Book[]
}

enum Role {
  USER
  ADMIN
}
